{
  "address": "0xA0EB6dfEc8b60c5CC68D599c6DFDD8BbD797cF35",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_withToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MIN_VOTERS_FOR_REWARD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REPORTER_REWARD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOTER_REWARD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WITH_TOKEN",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reportId",
          "type": "uint256"
        }
      ],
      "name": "claimReporterReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reportId",
          "type": "uint256"
        }
      ],
      "name": "claimVoterReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reportId",
          "type": "uint256"
        }
      ],
      "name": "getReport",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "good",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bad",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "voters",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "voterCount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "reporter",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "reporterClaimed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReportCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reportId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        }
      ],
      "name": "hasVoterClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        }
      ],
      "name": "report",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reportId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isGood",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x49ae52be8c10cb4b5cefb7ef33c0d758795c290ae37fb61fedbc480f53dcb7cb",
  "receipt": {
    "to": null,
    "from": "0x26DB20CA80AFaB89041Ba94616b4D84532132cB4",
    "contractAddress": "0xA0EB6dfEc8b60c5CC68D599c6DFDD8BbD797cF35",
    "transactionIndex": 7,
    "gasUsed": "837312",
    "logsBloom": "0x
    "blockHash": "0x52fa6d39df854a4f0668ebbb57f334c76b095262435bc8397c40a0699fc484dd",
    "transactionHash": "0x49ae52be8c10cb4b5cefb7ef33c0d758795c290ae37fb61fedbc480f53dcb7cb",
    "logs": [],
    "blockNumber": 38296295,
    "cumulativeGasUsed": "1628541",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xe3599c93c092817f79Ec1e090998684B86343794"
  ],
  "numDeployments": 1,
  "solcInputHash": "d678f6a2de07b7359fa5ebd19f42cfd5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_withToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MIN_VOTERS_FOR_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REPORTER_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTER_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITH_TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reportId\",\"type\":\"uint256\"}],\"name\":\"claimReporterReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reportId\",\"type\":\"uint256\"}],\"name\":\"claimVoterReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reportId\",\"type\":\"uint256\"}],\"name\":\"getReport\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"good\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bad\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"voters\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"voterCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"reporterClaimed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReportCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reportId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"hasVoterClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"}],\"name\":\"report\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reportId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isGood\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WhoIsThis.sol\":\"WhoIsThis\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/WhoIsThis.sol\":{\"content\":\"// SPDX-License-Identifier: ISC\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function mint(address receiver, uint256 amount) external;\\r\\n}\\r\\n\\r\\ncontract WhoIsThis {\\r\\n    struct Report {\\r\\n        uint256 id;\\r\\n        string title;\\r\\n        uint256 good;\\r\\n        uint256 bad;\\r\\n        address[] voters;\\r\\n        uint256 voterCount;\\r\\n        address reporter;\\r\\n        bool reporterClaimed;\\r\\n        mapping(address => bool) voterClaimed;\\r\\n    }\\r\\n\\r\\n    uint256 reportCount = 0;\\r\\n    Report[] reports;\\r\\n\\r\\n    IERC20 public immutable WITH_TOKEN;\\r\\n    uint256 public constant REPORTER_REWARD = 5 * 10**18; // 5 WITH\\r\\n    uint256 public constant VOTER_REWARD = 1 * 10**18; // 1 WITH\\r\\n    uint256 public constant MIN_VOTERS_FOR_REWARD = 2;\\r\\n\\r\\n    constructor(address _withToken) {\\r\\n        WITH_TOKEN = IERC20(_withToken);\\r\\n    }\\r\\n\\r\\n    function report(string memory _title) external {\\r\\n        Report storage newReport = reports.push();\\r\\n        newReport.id = reportCount;\\r\\n        newReport.title = _title;\\r\\n        newReport.good = 0;\\r\\n        newReport.bad = 0;\\r\\n        newReport.voterCount = 0;\\r\\n        newReport.reporter = msg.sender;\\r\\n        newReport.reporterClaimed = false;\\r\\n\\r\\n        reportCount++;\\r\\n    }\\r\\n\\r\\n    function vote(uint256 _reportId, bool _isGood) external {\\r\\n        require(_reportId < reports.length, \\\"Invalid report ID\\\");\\r\\n        Report storage reportItem = reports[_reportId];\\r\\n\\r\\n        // Check if user has already voted\\r\\n        for (uint256 i = 0; i < reportItem.voters.length; i++) {\\r\\n            require(reportItem.voters[i] != msg.sender, \\\"Already voted\\\");\\r\\n        }\\r\\n\\r\\n        // Add vote\\r\\n        if (_isGood) {\\r\\n            reportItem.good++;\\r\\n        } else {\\r\\n            reportItem.bad++;\\r\\n        }\\r\\n\\r\\n        // Record voter\\r\\n        reportItem.voters.push(msg.sender);\\r\\n        reportItem.voterCount++;\\r\\n    }\\r\\n\\r\\n    function claimReporterReward(uint256 _reportId) external {\\r\\n        require(_reportId < reports.length, \\\"Invalid report ID\\\");\\r\\n        Report storage reportItem = reports[_reportId];\\r\\n\\r\\n        require(msg.sender == reportItem.reporter, \\\"Not the reporter\\\");\\r\\n        require(reportItem.voterCount >= MIN_VOTERS_FOR_REWARD, \\\"Not enough voters\\\");\\r\\n        require(!reportItem.reporterClaimed, \\\"Already claimed\\\");\\r\\n\\r\\n        reportItem.reporterClaimed = true;\\r\\n        WITH_TOKEN.mint(msg.sender, REPORTER_REWARD);\\r\\n    }\\r\\n\\r\\n    function claimVoterReward(uint256 _reportId) external {\\r\\n        require(_reportId < reports.length, \\\"Invalid report ID\\\");\\r\\n        Report storage reportItem = reports[_reportId];\\r\\n\\r\\n        // Check if sender is a voter\\r\\n        bool isVoter = false;\\r\\n        for (uint256 i = 0; i < reportItem.voters.length; i++) {\\r\\n            if (reportItem.voters[i] == msg.sender) {\\r\\n                isVoter = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(isVoter, \\\"Not a voter for this report\\\");\\r\\n        require(reportItem.voterCount >= MIN_VOTERS_FOR_REWARD, \\\"Not enough voters\\\");\\r\\n        require(!reportItem.voterClaimed[msg.sender], \\\"Already claimed\\\");\\r\\n\\r\\n        reportItem.voterClaimed[msg.sender] = true;\\r\\n        WITH_TOKEN.mint(msg.sender, VOTER_REWARD);\\r\\n    }\\r\\n\\r\\n    function getReportCount() external view returns (uint256) {\\r\\n        return reports.length;\\r\\n    }\\r\\n\\r\\n    function getReport(uint256 _reportId) external view returns (\\r\\n        uint256 id,\\r\\n        string memory title,\\r\\n        uint256 good,\\r\\n        uint256 bad,\\r\\n        address[] memory voters,\\r\\n        uint256 voterCount,\\r\\n        address reporter,\\r\\n        bool reporterClaimed\\r\\n    ) {\\r\\n        require(_reportId < reports.length, \\\"Invalid report ID\\\");\\r\\n        Report storage reportItem = reports[_reportId];\\r\\n\\r\\n        return (\\r\\n            reportItem.id,\\r\\n            reportItem.title,\\r\\n            reportItem.good,\\r\\n            reportItem.bad,\\r\\n            reportItem.voters,\\r\\n            reportItem.voterCount,\\r\\n            reportItem.reporter,\\r\\n            reportItem.reporterClaimed\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function hasVoterClaimed(uint256 _reportId, address _voter) external view returns (bool) {\\r\\n        require(_reportId < reports.length, \\\"Invalid report ID\\\");\\r\\n        return reports[_reportId].voterClaimed[_voter];\\r\\n    }\\r\\n}\",\"keccak256\":\"0x40e40df41e950fbd1e83c1a70c8b81273628fd37c3225a80402f569e63e3dba2\",\"license\":\"ISC\"}},\"version\":1}",
  "bytecode": "0x60a06040526000805534801561001457600080fd5b50604051610e96380380610e9683398101604081905261003391610044565b6001600160a01b0316608052610074565b60006020828403121561005657600080fd5b81516001600160a01b038116811461006d57600080fd5b9392505050565b608051610dfa61009c6000396000818160b30152818161054101526107770152610dfa6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063c4e363e711610071578063c4e363e714610161578063c893b82f14610176578063c9d27afe14610189578063cad9642b1461019c578063f616b7b7146101a4578063fd123806146101b757600080fd5b80631e0e6a5f146100ae5780633ddcb071146100f25780634e7f9b191461010f57806368d79aa614610136578063932676da1461013e575b600080fd5b6100d57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b610101670de0b6b3a764000081565b6040519081526020016100e9565b61012261011d3660046109e3565b6101c6565b6040516100e9989796959493929190610a40565b610101600281565b61015161014c366004610aea565b610367565b60405190151581526020016100e9565b61017461016f3660046109e3565b6103d2565b005b6101746101843660046109e3565b6105a1565b610174610197366004610b26565b6107e0565b600154610101565b6101746101b2366004610b66565b610933565b610101674563918244f4000081565b600060606000806060600080600060018054905089106102015760405162461bcd60e51b81526004016101f890610c17565b60405180910390fd5b600060018a8154811061021657610216610c42565b600091825260209091206008909102018054600282015460038301546005840154600685015460018601805496975094956004880192916001600160a01b03811691600160a01b90910460ff1690879061026f90610c58565b80601f016020809104026020016040519081016040528092919081815260200182805461029b90610c58565b80156102e85780601f106102bd576101008083540402835291602001916102e8565b820191906000526020600020905b8154815290600101906020018083116102cb57829003601f168201915b505050505096508380548060200260200160405190810160405280929190818152602001828054801561034457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610326575b505050505093509850985098509850985098509850985050919395975091939597565b600154600090831061038b5760405162461bcd60e51b81526004016101f890610c17565b6001838154811061039e5761039e610c42565b600091825260208083206001600160a01b03861684526007600890930201919091019052604090205460ff16905092915050565b60015481106103f35760405162461bcd60e51b81526004016101f890610c17565b60006001828154811061040857610408610c42565b6000918252602090912060089091020160068101549091506001600160a01b0316331461046a5760405162461bcd60e51b815260206004820152601060248201526f2737ba103a3432903932b837b93a32b960811b60448201526064016101f8565b6002816005015410156104b35760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820766f7465727360781b60448201526064016101f8565b6006810154600160a01b900460ff16156105015760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b60448201526064016101f8565b60068101805460ff60a01b1916600160a01b1790556040516340c10f1960e01b8152336004820152674563918244f4000060248201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b15801561058557600080fd5b505af1158015610599573d6000803e3d6000fd5b505050505050565b60015481106105c25760405162461bcd60e51b81526004016101f890610c17565b6000600182815481106105d7576105d7610c42565b906000526020600020906008020190506000805b600483015481101561064b57336001600160a01b031683600401828154811061061657610616610c42565b6000918252602090912001546001600160a01b031603610639576001915061064b565b8061064381610c92565b9150506105eb565b50806106995760405162461bcd60e51b815260206004820152601b60248201527f4e6f74206120766f74657220666f722074686973207265706f7274000000000060448201526064016101f8565b6002826005015410156106e25760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820766f7465727360781b60448201526064016101f8565b33600090815260078301602052604090205460ff16156107365760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b60448201526064016101f8565b33600081815260078401602052604090819020805460ff19166001179055516340c10f1960e01b81526004810191909152670de0b6b3a764000060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156107c357600080fd5b505af11580156107d7573d6000803e3d6000fd5b50505050505050565b60015482106108015760405162461bcd60e51b81526004016101f890610c17565b60006001838154811061081657610816610c42565b9060005260206000209060080201905060005b60048201548110156108b857336001600160a01b031682600401828154811061085457610854610c42565b6000918252602090912001546001600160a01b0316036108a65760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b60448201526064016101f8565b806108b081610c92565b915050610829565b5081156108db576002810180549060006108d183610c92565b91905055506108f3565b6003810180549060006108ed83610c92565b91905055505b6004810180546001810182556000918252602082200180546001600160a01b031916331790556005820180549161092983610c92565b9190505550505050565b6001805480820182556000918252905460089091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf681019182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf70161099a8382610d04565b5060006002820181905560038201819055600582018190556006820180546001600160a81b0319163360ff60a01b1916179055805490806109da83610c92565b91905055505050565b6000602082840312156109f557600080fd5b5035919050565b600081518084526020808501945080840160005b83811015610a355781516001600160a01b031687529582019590820190600101610a10565b509495945050505050565b60006101008a8352602081818501528a518083860152600092505b80831015610a7a578b8301820151858401610120015291810191610a5b565b61012092506000838287010152601f19601f820116850191505089604085015288606085015281848203016080850152610ab6828201896109fc565b925050508460a0830152610ad560c08301856001600160a01b03169052565b82151560e08301529998505050505050505050565b60008060408385031215610afd57600080fd5b8235915060208301356001600160a01b0381168114610b1b57600080fd5b809150509250929050565b60008060408385031215610b3957600080fd5b8235915060208301358015158114610b1b57600080fd5b634e487b7160e01b600052604160045260246000fd5b600060208284031215610b7857600080fd5b813567ffffffffffffffff80821115610b9057600080fd5b818401915084601f830112610ba457600080fd5b813581811115610bb657610bb6610b50565b604051601f8201601f19908116603f01168101908382118183101715610bde57610bde610b50565b81604052828152876020848701011115610bf757600080fd5b826020860160208301376000928101602001929092525095945050505050565b602080825260119082015270125b9d985b1a59081c995c1bdc9d081251607a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610c6c57607f821691505b602082108103610c8c57634e487b7160e01b600052602260045260246000fd5b50919050565b600060018201610cb257634e487b7160e01b600052601160045260246000fd5b5060010190565b601f821115610cff57600081815260208120601f850160051c81016020861015610ce05750805b601f850160051c820191505b8181101561059957828155600101610cec565b505050565b815167ffffffffffffffff811115610d1e57610d1e610b50565b610d3281610d2c8454610c58565b84610cb9565b602080601f831160018114610d675760008415610d4f5750858301515b600019600386901b1c1916600185901b178555610599565b600085815260208120601f198616915b82811015610d9657888601518255948401946001909101908401610d77565b5085821015610db45787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220248b5b207627c5e085cd495c6c367da24b548f3640f78a101f1e2df8ba78e4d064736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063c4e363e711610071578063c4e363e714610161578063c893b82f14610176578063c9d27afe14610189578063cad9642b1461019c578063f616b7b7146101a4578063fd123806146101b757600080fd5b80631e0e6a5f146100ae5780633ddcb071146100f25780634e7f9b191461010f57806368d79aa614610136578063932676da1461013e575b600080fd5b6100d57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b610101670de0b6b3a764000081565b6040519081526020016100e9565b61012261011d3660046109e3565b6101c6565b6040516100e9989796959493929190610a40565b610101600281565b61015161014c366004610aea565b610367565b60405190151581526020016100e9565b61017461016f3660046109e3565b6103d2565b005b6101746101843660046109e3565b6105a1565b610174610197366004610b26565b6107e0565b600154610101565b6101746101b2366004610b66565b610933565b610101674563918244f4000081565b600060606000806060600080600060018054905089106102015760405162461bcd60e51b81526004016101f890610c17565b60405180910390fd5b600060018a8154811061021657610216610c42565b600091825260209091206008909102018054600282015460038301546005840154600685015460018601805496975094956004880192916001600160a01b03811691600160a01b90910460ff1690879061026f90610c58565b80601f016020809104026020016040519081016040528092919081815260200182805461029b90610c58565b80156102e85780601f106102bd576101008083540402835291602001916102e8565b820191906000526020600020905b8154815290600101906020018083116102cb57829003601f168201915b505050505096508380548060200260200160405190810160405280929190818152602001828054801561034457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610326575b505050505093509850985098509850985098509850985050919395975091939597565b600154600090831061038b5760405162461bcd60e51b81526004016101f890610c17565b6001838154811061039e5761039e610c42565b600091825260208083206001600160a01b03861684526007600890930201919091019052604090205460ff16905092915050565b60015481106103f35760405162461bcd60e51b81526004016101f890610c17565b60006001828154811061040857610408610c42565b6000918252602090912060089091020160068101549091506001600160a01b0316331461046a5760405162461bcd60e51b815260206004820152601060248201526f2737ba103a3432903932b837b93a32b960811b60448201526064016101f8565b6002816005015410156104b35760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820766f7465727360781b60448201526064016101f8565b6006810154600160a01b900460ff16156105015760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b60448201526064016101f8565b60068101805460ff60a01b1916600160a01b1790556040516340c10f1960e01b8152336004820152674563918244f4000060248201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b15801561058557600080fd5b505af1158015610599573d6000803e3d6000fd5b505050505050565b60015481106105c25760405162461bcd60e51b81526004016101f890610c17565b6000600182815481106105d7576105d7610c42565b906000526020600020906008020190506000805b600483015481101561064b57336001600160a01b031683600401828154811061061657610616610c42565b6000918252602090912001546001600160a01b031603610639576001915061064b565b8061064381610c92565b9150506105eb565b50806106995760405162461bcd60e51b815260206004820152601b60248201527f4e6f74206120766f74657220666f722074686973207265706f7274000000000060448201526064016101f8565b6002826005015410156106e25760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820766f7465727360781b60448201526064016101f8565b33600090815260078301602052604090205460ff16156107365760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b60448201526064016101f8565b33600081815260078401602052604090819020805460ff19166001179055516340c10f1960e01b81526004810191909152670de0b6b3a764000060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156107c357600080fd5b505af11580156107d7573d6000803e3d6000fd5b50505050505050565b60015482106108015760405162461bcd60e51b81526004016101f890610c17565b60006001838154811061081657610816610c42565b9060005260206000209060080201905060005b60048201548110156108b857336001600160a01b031682600401828154811061085457610854610c42565b6000918252602090912001546001600160a01b0316036108a65760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b60448201526064016101f8565b806108b081610c92565b915050610829565b5081156108db576002810180549060006108d183610c92565b91905055506108f3565b6003810180549060006108ed83610c92565b91905055505b6004810180546001810182556000918252602082200180546001600160a01b031916331790556005820180549161092983610c92565b9190505550505050565b6001805480820182556000918252905460089091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf681019182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf70161099a8382610d04565b5060006002820181905560038201819055600582018190556006820180546001600160a81b0319163360ff60a01b1916179055805490806109da83610c92565b91905055505050565b6000602082840312156109f557600080fd5b5035919050565b600081518084526020808501945080840160005b83811015610a355781516001600160a01b031687529582019590820190600101610a10565b509495945050505050565b60006101008a8352602081818501528a518083860152600092505b80831015610a7a578b8301820151858401610120015291810191610a5b565b61012092506000838287010152601f19601f820116850191505089604085015288606085015281848203016080850152610ab6828201896109fc565b925050508460a0830152610ad560c08301856001600160a01b03169052565b82151560e08301529998505050505050505050565b60008060408385031215610afd57600080fd5b8235915060208301356001600160a01b0381168114610b1b57600080fd5b809150509250929050565b60008060408385031215610b3957600080fd5b8235915060208301358015158114610b1b57600080fd5b634e487b7160e01b600052604160045260246000fd5b600060208284031215610b7857600080fd5b813567ffffffffffffffff80821115610b9057600080fd5b818401915084601f830112610ba457600080fd5b813581811115610bb657610bb6610b50565b604051601f8201601f19908116603f01168101908382118183101715610bde57610bde610b50565b81604052828152876020848701011115610bf757600080fd5b826020860160208301376000928101602001929092525095945050505050565b602080825260119082015270125b9d985b1a59081c995c1bdc9d081251607a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610c6c57607f821691505b602082108103610c8c57634e487b7160e01b600052602260045260246000fd5b50919050565b600060018201610cb257634e487b7160e01b600052601160045260246000fd5b5060010190565b601f821115610cff57600081815260208120601f850160051c81016020861015610ce05750805b601f850160051c820191505b8181101561059957828155600101610cec565b505050565b815167ffffffffffffffff811115610d1e57610d1e610b50565b610d3281610d2c8454610c58565b84610cb9565b602080601f831160018114610d675760008415610d4f5750858301515b600019600386901b1c1916600185901b178555610599565b600085815260208120601f198616915b82811015610d9657888601518255948401946001909101908401610d77565b5085821015610db45787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220248b5b207627c5e085cd495c6c367da24b548f3640f78a101f1e2df8ba78e4d064736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 50,
        "contract": "contracts/WhoIsThis.sol:WhoIsThis",
        "label": "reportCount",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 54,
        "contract": "contracts/WhoIsThis.sol:WhoIsThis",
        "label": "reports",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Report)47_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Report)47_storage)dyn_storage": {
        "base": "t_struct(Report)47_storage",
        "encoding": "dynamic_array",
        "label": "struct WhoIsThis.Report[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Report)47_storage": {
        "encoding": "inplace",
        "label": "struct WhoIsThis.Report",
        "members": [
          {
            "astId": 27,
            "contract": "contracts/WhoIsThis.sol:WhoIsThis",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 29,
            "contract": "contracts/WhoIsThis.sol:WhoIsThis",
            "label": "title",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 31,
            "contract": "contracts/WhoIsThis.sol:WhoIsThis",
            "label": "good",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 33,
            "contract": "contracts/WhoIsThis.sol:WhoIsThis",
            "label": "bad",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 36,
            "contract": "contracts/WhoIsThis.sol:WhoIsThis",
            "label": "voters",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 38,
            "contract": "contracts/WhoIsThis.sol:WhoIsThis",
            "label": "voterCount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 40,
            "contract": "contracts/WhoIsThis.sol:WhoIsThis",
            "label": "reporter",
            "offset": 0,
            "slot": "6",
            "type": "t_address"
          },
          {
            "astId": 42,
            "contract": "contracts/WhoIsThis.sol:WhoIsThis",
            "label": "reporterClaimed",
            "offset": 20,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 46,
            "contract": "contracts/WhoIsThis.sol:WhoIsThis",
            "label": "voterClaimed",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}